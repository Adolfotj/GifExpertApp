{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGif","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,iBAAQP,IAAR,mBAAyBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAsB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGrC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZN,EAFY,iDAEqCO,UAAUF,GAF/C,+DAICG,MAAMR,GAJP,cAIZS,EAJY,gBAKKA,EAAKC,OALV,uBAKVC,EALU,EAKVA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXpB,kBAeXY,GAfW,4CAAH,sDCGNK,EAAU,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UAExB,ECD0B,SAAEa,GAE1B,MAA0BlC,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPlB,EAAQc,GACHK,MAAM,SAAAC,GAEHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAACD,IAEGE,EDnBwBK,CAAcpB,GAAlCU,EAAb,EAAQJ,KAAaQ,EAArB,EAAqBA,QAErB,OACE,qCACE,oBAAIlB,UAAU,oCAAd,SAAmDI,IACjDc,GAAW,mBAAGlB,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEVnB4B,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACE,mDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI4C,EAAWd,KAAK,SAAAR,GAAS,OACtB,cAAC,EAAD,CAECA,UAAaA,GADNA,Y,MCbzBuB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.f4d9e606.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) =>  {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat => [`${inputValue}`, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGif = async (categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria)}&limit=10&api_key=oc2YAKB7Gtq501Ot6GOKc5GCOCEe781u`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    \r\n    return gifs;\r\n  };","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( categoria );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { getGif } from '../helpers/getGif';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGif( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n};\r\n","import React, { useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpert tj 2021</h2>\r\n          <AddCategory setCategories={ setCategories }/>\r\n          <hr />\r\n\r\n          <ol>\r\n            {\r\n              categories.map( categoria => (\r\n                 <GifGrid\r\n                  key= { categoria } \r\n                  categoria = {categoria}\r\n                  />\r\n              ))\r\n            }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}